#!/usr/bin/env python

import os
import socket
import struct
from start_backup_request_pb2 import StartBackupRequest
from progress_backup_request_pb2 import ProgressBackupRequest
from stop_backup_request_pb2 import StopBackupRequest
from request_pb2 import Request
from string_reply_pb2 import StringReply

IPC_SOCKET_PATH = "/var/datto/dattod_ipc"

def handle_request(request):
    if request.type == Request.START_BACKUP:
        print 'START', request.start_backup_request
    elif request.type == Request.STOP_BACKUP:
        print 'STOP', request.stop_backup_request
    elif request.type == Request.PROGRESS_BACKUP:
        print 'PROGRESS', request.progress_backup_request

def main():
    print 'Starting test server'
    s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
    s.bind(IPC_SOCKET_PATH)
    s.listen(1)
    conn, addr = s.accept()

    reply = StringReply()
    reply.message = 'DISCONNECT'
    while True:
        length = conn.recv(4)
        if not length:
            break
        else:
            length = struct.unpack('!I', length)[0]
            data = conn.recv(length)
            request = Request()
            request.ParseFromString(data)
            handle_request(request)

            reply = reply.SerializeToString()
            conn.send(struct.pack('!I', len(reply))) # send message over the socket
            conn.send(reply)
    s.close()
    os.remove(IPC_SOCKET_PATH)

if __name__ == "__main__":
    main()
