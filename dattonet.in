#!/usr/bin/env python

import socket
import struct
import threading
from dattolib import make_request_to_dattod
from dattolib.request_pb2 import Request
from dattolib.reply_pb2 import Reply
from dattolib.request_builder import get_basic_info, get_complete_info

LISTEN_ADDRESS = ("0.0.0.0", 2856)

PASSOFF_LIST = [Request.START_BACKUP, Request.STOP_BACKUP,
                Request.PAUSE_BACKUP, Request.RESUME_BACKUP,
                Request.BACKUP_STATUS]


def handle_connection(connection):
    try:
        # receive 4 bytes containing the size of the Request
        length = connection.recv(4)
        length = struct.unpack('!I', length)[0]

        request = Request()
        # Get the data from the network
        data = connection.recv(length)
        # Interpret the data as a Request object
        request.ParseFromString(data)

        # Handle or pass off
        if request.type in PASSOFF_LIST:
            reply = make_request_to_dattod(request)
        elif request.type == Request.BASIC_INFO:
            reply = get_basic_info()
        elif request.type == Request.COMPLETE_INFO:
            reply = get_complete_info()
        else:
            reply = Reply()
            reply.type = Reply.ERROR
            reply.error_reply.short_error = "Unexpected request type"

        reply_serialized = reply.SerializeToString()
        # Send size
        connection.send(struct.pack('!I', len(reply_serialized)))
        # Send Reply
        connection.send(reply_serialized)
    finally:
        # Close connection
        connection.close()


class DattoWebListener(object):

    def __init__(self, address):
        self.address = address
        self.sock = None

    def listen(self):
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.sock.bind(self.address)
        self.sock.listen(3)

    def accept_loop(self):
        while True:
            conn, addr = self.sock.accept()
            print "Connection from :", addr 
            thread = threading.Thread(target=handle_connection, args=(conn,))
            thread.daemon = True
            thread.start()


if __name__ == "__main__":
    listener = DattoWebListener(LISTEN_ADDRESS)
    listener.listen()
    listener.accept_loop()
