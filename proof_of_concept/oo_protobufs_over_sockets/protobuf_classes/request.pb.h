// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#ifndef PROTOBUF_request_2eproto__INCLUDED
#define PROTOBUF_request_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "start_backup_request.pb.h"
#include "stop_backup_request.pb.h"
// @@protoc_insertion_point(includes)

namespace datto_linux_client {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_request_2eproto();
void protobuf_AssignDesc_request_2eproto();
void protobuf_ShutdownFile_request_2eproto();

class Request;

enum Request_RequestType {
  Request_RequestType_START_BACKUP = 1,
  Request_RequestType_STOP_BACKUP = 2
};
bool Request_RequestType_IsValid(int value);
const Request_RequestType Request_RequestType_RequestType_MIN = Request_RequestType_START_BACKUP;
const Request_RequestType Request_RequestType_RequestType_MAX = Request_RequestType_STOP_BACKUP;
const int Request_RequestType_RequestType_ARRAYSIZE = Request_RequestType_RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_RequestType_descriptor();
inline const ::std::string& Request_RequestType_Name(Request_RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_RequestType_descriptor(), value);
}
inline bool Request_RequestType_Parse(
    const ::std::string& name, Request_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_RequestType>(
    Request_RequestType_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();
  
  Request(const Request& from);
  
  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();
  
  void Swap(Request* other);
  
  // implements Message ----------------------------------------------
  
  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef Request_RequestType RequestType;
  static const RequestType START_BACKUP = Request_RequestType_START_BACKUP;
  static const RequestType STOP_BACKUP = Request_RequestType_STOP_BACKUP;
  static inline bool RequestType_IsValid(int value) {
    return Request_RequestType_IsValid(value);
  }
  static const RequestType RequestType_MIN =
    Request_RequestType_RequestType_MIN;
  static const RequestType RequestType_MAX =
    Request_RequestType_RequestType_MAX;
  static const int RequestType_ARRAYSIZE =
    Request_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestType_descriptor() {
    return Request_RequestType_descriptor();
  }
  static inline const ::std::string& RequestType_Name(RequestType value) {
    return Request_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(const ::std::string& name,
      RequestType* value) {
    return Request_RequestType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .datto_linux_client.Request.RequestType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::datto_linux_client::Request_RequestType type() const;
  inline void set_type(::datto_linux_client::Request_RequestType value);
  
  // optional string mq_reply_path = 2;
  inline bool has_mq_reply_path() const;
  inline void clear_mq_reply_path();
  static const int kMqReplyPathFieldNumber = 2;
  inline const ::std::string& mq_reply_path() const;
  inline void set_mq_reply_path(const ::std::string& value);
  inline void set_mq_reply_path(const char* value);
  inline void set_mq_reply_path(const char* value, size_t size);
  inline ::std::string* mutable_mq_reply_path();
  inline ::std::string* release_mq_reply_path();
  
  // optional .datto_linux_client.StartBackupRequest start_backup_request = 3;
  inline bool has_start_backup_request() const;
  inline void clear_start_backup_request();
  static const int kStartBackupRequestFieldNumber = 3;
  inline const ::datto_linux_client::StartBackupRequest& start_backup_request() const;
  inline ::datto_linux_client::StartBackupRequest* mutable_start_backup_request();
  inline ::datto_linux_client::StartBackupRequest* release_start_backup_request();
  
  // optional .datto_linux_client.StopBackupRequest stop_backup_request = 4;
  inline bool has_stop_backup_request() const;
  inline void clear_stop_backup_request();
  static const int kStopBackupRequestFieldNumber = 4;
  inline const ::datto_linux_client::StopBackupRequest& stop_backup_request() const;
  inline ::datto_linux_client::StopBackupRequest* mutable_stop_backup_request();
  inline ::datto_linux_client::StopBackupRequest* release_stop_backup_request();
  
  // @@protoc_insertion_point(class_scope:datto_linux_client.Request)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_mq_reply_path();
  inline void clear_has_mq_reply_path();
  inline void set_has_start_backup_request();
  inline void clear_has_start_backup_request();
  inline void set_has_stop_backup_request();
  inline void clear_has_stop_backup_request();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* mq_reply_path_;
  ::datto_linux_client::StartBackupRequest* start_backup_request_;
  ::datto_linux_client::StopBackupRequest* stop_backup_request_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();
  
  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// ===================================================================


// ===================================================================

// Request

// required .datto_linux_client.Request.RequestType type = 1;
inline bool Request::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::datto_linux_client::Request_RequestType Request::type() const {
  return static_cast< ::datto_linux_client::Request_RequestType >(type_);
}
inline void Request::set_type(::datto_linux_client::Request_RequestType value) {
  GOOGLE_DCHECK(::datto_linux_client::Request_RequestType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional string mq_reply_path = 2;
inline bool Request::has_mq_reply_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_mq_reply_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_mq_reply_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_mq_reply_path() {
  if (mq_reply_path_ != &::google::protobuf::internal::kEmptyString) {
    mq_reply_path_->clear();
  }
  clear_has_mq_reply_path();
}
inline const ::std::string& Request::mq_reply_path() const {
  return *mq_reply_path_;
}
inline void Request::set_mq_reply_path(const ::std::string& value) {
  set_has_mq_reply_path();
  if (mq_reply_path_ == &::google::protobuf::internal::kEmptyString) {
    mq_reply_path_ = new ::std::string;
  }
  mq_reply_path_->assign(value);
}
inline void Request::set_mq_reply_path(const char* value) {
  set_has_mq_reply_path();
  if (mq_reply_path_ == &::google::protobuf::internal::kEmptyString) {
    mq_reply_path_ = new ::std::string;
  }
  mq_reply_path_->assign(value);
}
inline void Request::set_mq_reply_path(const char* value, size_t size) {
  set_has_mq_reply_path();
  if (mq_reply_path_ == &::google::protobuf::internal::kEmptyString) {
    mq_reply_path_ = new ::std::string;
  }
  mq_reply_path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Request::mutable_mq_reply_path() {
  set_has_mq_reply_path();
  if (mq_reply_path_ == &::google::protobuf::internal::kEmptyString) {
    mq_reply_path_ = new ::std::string;
  }
  return mq_reply_path_;
}
inline ::std::string* Request::release_mq_reply_path() {
  clear_has_mq_reply_path();
  if (mq_reply_path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mq_reply_path_;
    mq_reply_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .datto_linux_client.StartBackupRequest start_backup_request = 3;
inline bool Request::has_start_backup_request() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_start_backup_request() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_start_backup_request() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_start_backup_request() {
  if (start_backup_request_ != NULL) start_backup_request_->::datto_linux_client::StartBackupRequest::Clear();
  clear_has_start_backup_request();
}
inline const ::datto_linux_client::StartBackupRequest& Request::start_backup_request() const {
  return start_backup_request_ != NULL ? *start_backup_request_ : *default_instance_->start_backup_request_;
}
inline ::datto_linux_client::StartBackupRequest* Request::mutable_start_backup_request() {
  set_has_start_backup_request();
  if (start_backup_request_ == NULL) start_backup_request_ = new ::datto_linux_client::StartBackupRequest;
  return start_backup_request_;
}
inline ::datto_linux_client::StartBackupRequest* Request::release_start_backup_request() {
  clear_has_start_backup_request();
  ::datto_linux_client::StartBackupRequest* temp = start_backup_request_;
  start_backup_request_ = NULL;
  return temp;
}

// optional .datto_linux_client.StopBackupRequest stop_backup_request = 4;
inline bool Request::has_stop_backup_request() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request::set_has_stop_backup_request() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request::clear_has_stop_backup_request() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request::clear_stop_backup_request() {
  if (stop_backup_request_ != NULL) stop_backup_request_->::datto_linux_client::StopBackupRequest::Clear();
  clear_has_stop_backup_request();
}
inline const ::datto_linux_client::StopBackupRequest& Request::stop_backup_request() const {
  return stop_backup_request_ != NULL ? *stop_backup_request_ : *default_instance_->stop_backup_request_;
}
inline ::datto_linux_client::StopBackupRequest* Request::mutable_stop_backup_request() {
  set_has_stop_backup_request();
  if (stop_backup_request_ == NULL) stop_backup_request_ = new ::datto_linux_client::StopBackupRequest;
  return stop_backup_request_;
}
inline ::datto_linux_client::StopBackupRequest* Request::release_stop_backup_request() {
  clear_has_stop_backup_request();
  ::datto_linux_client::StopBackupRequest* temp = stop_backup_request_;
  stop_backup_request_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace datto_linux_client

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::datto_linux_client::Request_RequestType>() {
  return ::datto_linux_client::Request_RequestType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_request_2eproto__INCLUDED
