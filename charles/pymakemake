#!/usr/bin/env python
'''
	Copyright (C) 2013  Charles R.
	See LICENSE for more information.
'''
import os
import yaml
from datetime import datetime

CONFIG_FILE = 'pymakemake.conf'

def get_dependencies(rootdir):
	deps = ""
	for (path, dirs, files) in os.walk(rootdir):
		for srcfile in files:
			if srcfile.endswith(".c"):
				deps += "$(OBJDIR)" + os.sep + srcfile.replace('.c', '.o') + " "
	return deps.lstrip()


def print_makefile(configuration):
	makefile = """# Generated by PyMakeMake on %s

# Project Setup
EXECNAME =	%s
SRCDIR =	%s
OBJDIR =	%s
BINDIR =	%s

# Compiler
CC =	%s

# Compiler Flags
CFLAGS =	%s

# Linker Flags
LDFLAGS =	%s

############################################################
DEPS=%s

all: $(DEPS)
	$(CC) -o $(BINDIR)/$(EXECNAME) $(DEPS) $(LDFLAGS)

$(OBJDIR)/%%.o: $(SRCDIR)/%%.c
	$(CC) $(CFLAGS) -c -o $@ $<

clean:
	find $(OBJDIR) -name "*.o" -print0 | xargs -0 rm -rf

cleaner: clean
	rm -f $(BINDIR)/$(EXECNAME)
""" % (datetime.now().strftime("%Y-%m-%d %H:%M"), 
       configuration['EXECUTABLE_FNAME'],
       configuration['SOURCE_DIRECTORY'],
       configuration['OBJECT_DIRECTORY'],
       configuration['BINARY_DIRECTORY'],
       configuration['C_COMPILER'],
       ("" if (configuration['C_FLAGS'] is None) else configuration['C_FLAGS']),
       ("" if (configuration['LD_FLAGS'] is None) else configuration['LD_FLAGS']),
       get_dependencies(configuration['SOURCE_DIRECTORY'])
)
	print(makefile)


def main():
	configuration = None
	try:
		configuration = yaml.load(open(CONFIG_FILE, 'r'))
	except Exception:
		print("Could not read configuartion file:", CONFIG_FILE)
		return
	print_makefile(configuration)


if __name__ == "__main__":
	main()
